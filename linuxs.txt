====linux系统分区：
主分区=+扩展分区小于等于4，1~4编号只给主分区和扩展分区。故逻辑分区只能从编号5开始
拓展分区最多一个且不能放入数据文件以及它不能格式化，拓展分区里放的逻辑分区可以放数据和格式化
Linux 硬盘分区，格式化，给分区建立设备文件名（系统自动完成），分配盘符（挂载）[盘符称为挂载点]，挂载点必须是空目录
格式化：写入文件系统（按一定规则将硬盘划分为4kb一单位的格段，并建立inote表，i节点能够查询文件所在位置）
挂载：给每个分区分配挂载点，，挂载点必须是空目录。

=====常用命令：
ls -a 查看隐藏文件all
ls -l 长显示,显示文件或者目录详细信息包括大小 修改时间long
ls -d 显示目录
ls -h 更加人性化显示 比如字节转换为MB，GB 不用自己算human
ls -i 查询文件inode号(inode存储文件的详细信息) 信息编号，类似于人的身份证号码

隐藏文件的初衷：表明文件是一个系统文件如无必要不要动它

在 ls -l 查询文件详细信息后，第一列会出现类似：-rwxr-xr-x 这样的字符，其中开头的 - 便是代表这个文件是二进制文件的意思，以下为其他开头的含义：
-二进制文件
d：目录
l：软链接文件

r 代表可以读 w 代表可以写 x代表可以执行
-rwxr-xr-x
-(rwx)(r-x)(r-x ) Linux中的文件以这种方式来显示不同用户的不同权限
u g o
u 所有者 g 所属组 o 其他人

====目录处理命令：
mkdir 创建目录 在/tmp/目录下创建临时文件 只能创建/tmp/***** 二级目录
mkdir -p 可以递归创建 在没有一级目录的情况下新创建二级目录
pwd 显示当前所在路径
cd . . 返回上一级目录(两个点连着）
rmdir 删除空目录 只能删除没有文件的空目录 （不经常使用）
cp 复制文件 cp [原文件路径][需要复制到的路径]：cp -r /etc /root
cp /home/usr/dir/{file1,file2,file3,file4} /home/usr/destination/（复制多个文件用逗号）
cp -r 复制目录
cp -p 保留原文件属性 比如保留创建时间 日志文件的复制需要用到
cp -rp 复制目录并且保留原文件属性
mv 剪切 改名（在同一个目录下为改名）mv /root/myself /root/Myself
rm 删除文件
rm -f 强制删除 不再询问
rm -r 删除目录 一般是rm -rf 连着用
control+C退出选项

====文件处理命令：
touch [文件名] 在当前目录下创建空文件 touch test.py
touch[绝对路径+文件名]。 指明绝对路径，在绝对路径处创建文件 touch /root/myself/test.py

cat [文件名] 显示文件内容 只适合短的文件内容
cat -n [文件名] 显示行号 给文件内容的每一行标号
cat -A [文件名] 显示隐藏字符
tac [文件名] 逆序显示文件内容 倒着来 不支持-n

more [文件名] 一页一页显示文件内容 适合长的文件内容 
空格或者f 翻页 回车（Enter）一行一行翻，换行 q或者Q ，退出

less [文件名] 一页一页显示文件内容，只不过这条命令可以往回翻页，
查看翻过的文件内容 page up向上翻页，↑箭头向上翻一行
可以进行搜索/+搜索内容n（next）向下搜索
如果只想看文件的头或尾：
head [文件名] 显示文件最前几行 具体几行加n head -n 行数 [文件名] 没有指定 默认10行
tail [文件名] 显示文件最后几行 具体几行加n tail -n 行数 [文件名] 没有指定 默认10行 
tail -f 动态显示文件末尾内容

====连接命令link
ln -s [原文件] [目标文件] 创建软链接
ln [原文件] [目标文件] 创建硬链接（少用）
硬链接就是把源文件拷贝到目标位置，
而他与cp -p 最大的一点区别就是他可以同步更新
源文件丢失硬链接也能正常访问。
硬链接的inote节点与原文件一样[同步更新的原理，故而不能跨分区]。区分方法
不能针对目录使用

====权限管理命令
【root和文件的所这才能该改变文件的权限】
chmod [{u,g,o,a}{+,-,=}{r,w,x}] [文件或者目录](不常用)
chmod u+x,g-r,o=r-- /root/myself/test/hello.py

数字表示权限r--4 w--2 x--1；2^2,2^1,2^0;
640: rw-r-----
chmod 640 /root/myself/test/hello.py
chmod -R递归修改（将目录和目录下所有文件的权限）

代表字符	 权限	              对文件的含义	                  对目录的含义
r	读权限	    可以查看文件内容   可以cat/more/head/tail/less	  可以列出目录中的内容 可以ls
w	写权限	    可以修改文件内容   可以vim	                      可以在目录中创建，删除文件 可以touch/mkdir/rmdir/rm
x	执行权限	可以执行文件       可以script(脚本) command(命令) 可以进入目录 可以cd

故而要想删除某一文件需要对其所在目录具有w权限
目录的rx绑定的，同时具有。


====其他权限管理命令
【仅root用户能】
改变文件或者目录所有者
chown [所有者] [文件或者目录]
改变所属组
chgrp [所属组] [文件或者目录]

umask 显示设置文件的缺省权限
umask -S以rwx形式显示新建文件/目录的缺省权限（文件默认去掉x权限）默认755

若要将文件的默认缺省权限改为rwxr-xr--754则 777-754=023
umask 023即可完成操作（不建议更改）

====文件搜索命令：（会占用大量系统资源，合理规划文件，少用为佳）、
find [搜索范围][匹配条件] 用于文件搜索
-name指定文件名
find /etc -name init（区分大小写）
find /etc -name *init*(文件名里包含了init都会被列出)
*匹配任意字符，？匹配单个字符
find -iname（不区分大小写）

find -size（根据文件大小从查找）+n（大于）-n（小于） n（等于）
linux中一个数据块的大小是512字节，0.5k（故需要换算）100mb=102400kb=204800（数据块）
find / -size +204800（根目录下查找大于100MB的文件）
连接选项-a（and两者都满足）-o（or满足一个条件即可）
find /etc -size +163840 -a -size -204800
在/etc下查找大于80MB小于100MB的文件


find -user（根据所有者查找）find / -user edenia
find -grp （根据所属组查找）

find [搜索范围] -amin [时间] 查找时间以内/被访问过的文件和目录 a：access
find [搜索范围] -cmin [时间] 查找时间以内/被修改过属性的文件和目录 c：change
find [搜索范围] -mmin [时间] 查找时间以内/被修改过内容的文件和目录 m：modify

find /etc -amin -5（+5？））
5分钟之内被访问过的文件和目录

find -type（根据文件类型查找）
f 文件 d 目录 l 软链接文件
find /etc -name init* -a -type d

find -exec/-ok 命令 {} \；
{}表示find从查询结果，\转义符，；表结束

find /etc -name init* -a -type f -exec ls -l {} \;
-ok会询问，确认。

find -inum 根据inote节点进行查找 
如：find . -inum 31531 -exec rm {} \;
查找硬链接（inote节点相同）

====其他搜索命令
locate [文件名]
locate inittab
在文件资料库中查找 速度更快（文件资料库中没有的文件就不能找到）
updatedb 更新文件资料库 因为locate并不是实时的
如果存放的文件在/tmp 临时文件存放处下面 locate就找不到，文件资料库不存储临时文件内容
locate -i不区分大小写


文件搜索命令：
which 命令名
which cp
查找命令的绝对路径 并显示别别名
whereis 命令名
除了能找到命令的路径还能找到帮助文档所在的位置
还能找到配置文件的路径

grep
在文件中搜寻字串匹配的行 并输出（输出关键词所在的行）
grep multiuser /etc/inittab
grep -i不区分大小写
grep -v排除指定字串
grep -v ^# /etc/inittab（以#开头的行都不会被列出）


====帮助命令
man [命令名或者配置文件名]
查看，命令或配置文件的帮助信息
man ls
man services

whatis 命令名
显示指定命令的简短信息

apropos 配置文件名
同whatis

命令 --help
能获得命令的主要信息常用选项等

help
查看shell内置命令的帮助信息

====用户管理命令
useradd 添加新用户
passwd [新用户名称] 给新用户填加密码

passwd edenia

who 查看用户登录信息
第一列 登陆用户名
第二列 登陆终端 tty表示本地终端 pts表示远程登陆终端
第三列 登陆时间
第四列 登陆主机的IP地址 如果没有写表示本机登陆

w
可以得到更详细的信息

uptime 可以显示服务器的运行时间等选项
=====压缩和解压命令
gzip（.gz）
gzip [文件名]（不能压缩目录，压缩不保存原文件）
解压：
gunzip/gizp -d

tar 打包命令
tar [选项] [压缩后文件名] [目录]
-c 生成打包文件
-v 显示详细信息
-f 指定文件名
-z 打包同时压缩
mkdir /tmp/test /tmp/test/hello
tar -czf test.tar.gz /tmp/test
生成的.tar.gz的压缩包保存在当前文件

tar 命令解包
tar [选项] [压缩文件名] [目录]
-x 解包
-v 显示详细信息
-f 指定解压文件名
-z 解压缩
tar -zxfv test.tar.gz（在当前目录下解压）

zip 压缩命令，压缩文件或目录且能保留原文件（win，linux通用）
zip [选项] [压缩后文件或目录名] [文件或目录]
原文件会保留 而且提示压缩比 deflated
没有gzip压缩比大，不常用
压缩后格式为：.zip
zip -r 压缩目录
zip -r test.zip test
解压缩 unzip [压缩文件]

gzip的升级版本
bzip2 [选项] [文件名] 压缩文件，大型文件一般用这个压缩
例子：
bzip2 -k Japan
-k：保留原文件 如果不需保留可去掉
生成Japan.bz2压缩文件
他还可以与tar结合使用
tar -cjfv Japan.tar.bz2 Japan
将-z换为-j

bunzip2解压缩
bunzip2 [选项] [压缩文件名] 解压文件
-k：保留压缩包
与tar结合使用
tar -xjfv Japan.tar.bz2 Japan

====网络命令
write（给在线用户发送信息， ctrl +d保存结束）
用who，w可以查看在线用户信息

write [用户名]
write edenia
hello，world
EOF（CTRL + D）

wall（write all，给所有用户发送信息）
wall [message]

ping（给远程主机发送icmp请求包）
ping ip地址
ping -c指定次数


ifconfig（查看和设置网卡信息，临时设置，永久性设置需要更改配置文件）

lo回环网卡：
lo: local的简写，一般指本地环回接口。
系统虚拟的环回接口，它的IP地址是127.0.0.1，利用这个接口可以实现系统内部发送和接收数据

mail（查看发送电子邮件，ctrl + d保存发送）

mail [用户名]

查看邮件直接mail
N 表示未读邮件
想看第几封邮件就按前面的标号数字
h键查看邮箱列表
d [n] 删除第n封邮件
q 退出

last 列出目前与过去所有登陆系统的用户信息，以及reboot系统重启的时间

lastlog 检查某特定用户上次登陆的时间
lastlog -u 502查看指定用户的登录信息
502为用户的uid

traceroute 显示数据包到主机间的路径。跟踪路由

netstat（显示网络相关信息）
netstat [选项] 显示网络相关信息
-t TCP协议：传输控制协议
-u UDP协议：用户数据报
-l 监听
-r 路由：网关
-n 显示IP地址和端口号
netstat -tlun ：查询本机监听的端口
netstat -an ：查看本机所有的网络连接
netstat -rn ：查看本机路由（网关）


setup（redhat系列才有）
配置网络

====挂载命令mount

mount -t iso9660 /dev/sr0 /mnt/cdrom
-t iso9660 可以省略
设备文件名默认就是/dev/sr0
/dev/cdrom也可以写 /dev/sr0
/dev/cdrom是sr0的软链接。

卸载命令umount
使用前不能在挂载目录
umount /dev/sr0
或umount /mnt/cdrom


====关机重启命令
shutdown [选项] 时间
时间选项里可以填具体时间比如：
now 现在关机
20:30 八点半关机
-c：取消前一个关机命令
-h：关机
-r：重启
shutdown -h now （现在关机）
shutdown -h 20:30(很少用)
在服务器上重启需要谨慎，需要先停掉服务，否则物理内存会坏
而且远程服务器只能重启，关机后需要管理员手动开机

其他关机命令：
halt
poweroff 相当于直接断电
init 0
推荐使用shutdown关机，会保存正在运行的服务

重启命令
reboot
init 6

系统的运行级别：
init 0-6
0：关机
1：单用户 进入选项菜单 只有root用户登陆进去 相当于Windows安全模式F8，只不过没有图形界面
2：不完全多用户，不含NFS服务，没有图形界面 NFS网络文件系统，Linux之间文件传输共享方式
   除了NFS服务，和3一样。（NFS安全级别较低）
3：完全多用户，没有图形界面
4：未分配，没有图形界面
5：图形界面
6：重启

runlevel
查看当前运行级别

logout
logout 退出登陆命令
注意：在服务器中一定要在操作完成之后退出登陆，否则其他人会直接进入你的服务器，造成非常大的损失。
最基本的安全意识一定要有！！！


====文本编辑器VIM
Vim没有菜单，只有命令
Vim的工作模式有三种：

第一种：命令模式 vi/vim+文件名 进入命令模式 不可以输入文字，只能识别命令（默认进入命令模式）

第二种：插入模式 按i/a/o进入，可以继续输入文字，按Esc退出
插入命令：
a：在光标所在字符后插入
A：在光标所在行尾插入
i：在光标所在字符前插入
I：在光标所在行行首插入
o：在光标下插入新行
O：在光标上插入新行


第三种：编辑模式 在命令模式下按:，即可进入 编辑模式 可以输入编辑命令 比如：保存并退出，加行号

定位命令：（命令模式）
:set nu 设置行号
:set nonu 取消行号
gg 到第一行
G 到最后一行
nG 到第n行
: n 到第n行 （比较直观）
$ 移动到行尾
0 移动到行首

删除命令：
x 删除光标所在处的字符
nx 删除光标所在处后n个字符5x
dd 删除光标所在行
ndd 删除n行
dG 删除光标所在行到文件末尾的内容
D 删除光标所在处到行尾内容
:n1,n2d 删除指定范围的行 n1-n2的行全部被删除：10，20d

复制和剪切命令：
yy 复制当前行
nyy 复制当前行一下n行
dd 剪切当前行
ndd 剪切当前行以下n行
p 粘贴在当前光标所在行下
P 粘贴在当前光标所在行上

替换或取消命令：
r 替换光标所在处字符
R 从光标所在处开始替换字符，按Esc结束
u 取消上一步操作（相当于撤销）

搜索和搜索替换命令：
/string 搜索指定字符串string 与less命令操作类似
搜索时忽略大小写:set ic
搜索时不忽略大小写:set noic
n 搜索指定字符串的下一个出现位置
:%s/要替换的字符串/替换的新的字符串/g 不询问
把/g换成/c 进行询问确认
全文替换指定字符串
:n1,n2s/要替换的字符串/替换的新的字符串/g
在一定范围内替换指定字符串

保存和退出命令：
:w 保存修改
:w new_filename 另存为指定文件
:wq 保存修改并退出
ZZ 快捷键，保存修改退出
:q! 不保存修改退出
:wq! 保存修改并退出（只有文件所有者以及root可以使用）适合保存root只有只读权限的文件

====vim使用技巧
:r !命令 当前的Vim文档导入命令执行结果
：r !文件（能导入文件的内容）
：r ！/etc/issue
例子：
:r !date 直接把当前时间导入当前的Vim文档

：！能在不退出vim的情况下执行命令

map [快捷键] [触发命令] 定义快捷键
map ^P I#<ESC> 给脚本行首加#注释
有些时候在重启服务器之后，定义的快捷键会消失，这时候我们需要在用户的家目录下写配置文件，保存快捷键
root用户在 /root/.vimrc
其他用户在 /home/username/.vimrc在里面进行编辑，永久生效
(定义编辑命令)

ab [a内容][b内容]
例子：
ab mymail 888@qq.com
替换命令，当你在vim文档中输入mymail时按回车或者空格会自动变888@qq.com
即：会自动把b内容替换成a
非常实用的小技巧

====软件包管理
源码包：可以看到源代码，但是安装时间较慢，脚本安装包 类似Windows安装软件， 他是写了安装界面的源码包

优点：
1.开源，如果有足够的能力，可以修改源代码
2.可以自由选择所需的功能
3.软件是编译安装，所以更适合自己的系统，使用更加稳定也效率更高
4.卸载方便，直接删除安装目录
缺点：
1.安装过程步骤较多，尤其安装较大的软件集合时（如LAMP环境搭建），容易出现拼写错误
2.编译过程时间较长，安装比二进制安装时间长
3.因为是编译安装，安装过程中一旦报错新手很难解决

二进制包：RPM包，系统默认包，厂商已经进行了编译，看不到源代码，但是安装时间较快
优点：
1.包管理系统简单，只通过几个命令就可以实现包的安装，升级，查询和卸载
2.安装速度比源码包安装快得多
缺点：
1.经过编译，不再可以看到源代码
2.功能选择不如源码包灵活
3.依赖性 依赖性指的是要想安装A包就得先安装B包，要想安装B包又得先安装C包，
所以只能以CBA的顺序安装RPM包，删除的时候得按ABC顺序删除安装包，基本上所有的RPM包全有依赖性

====PM包管理 -rpm命令管理

RPM包命名规则
例子：
Httpd-2.2.15.el6.centos.1.i686.rpm
其中：

Httpd 软件包包名
2.2.15 软件版本
15 软件发布的次数
el6.centos 适合的Linux平台
i686 适合的硬件平台 noarch 表示任何硬件平台都可以安装
rpm rpm包扩展名

如果自己组建rpm包，都以rpm结尾，这样更加清晰，其他管理员可以明白
注意：Httpd-2.2.15.el6.centos.1.i686.rpm为包全名，Httpd 为包名是有区别的，Linux系统命令严格区分两者


RPM包依赖性
树形依赖：a→b→c
环形依赖：a→b→c→a
环形依赖需要把a,b,c三个同时安装用一条命令同时安装

模块依赖：模块依赖查询网站：www.rpmfind.net
==如果安装时遇到问题，出现依赖性错误
被依赖文件以.so.[数字]结尾的为库依赖，需要直接安装这个软件，错误会自动解决
安装这个包时需要进入网站 www.rpmfind.net.
查询被依赖文件

包全名：操作的包是没有安装的软件包时，使用包全名。而且要注意路径
包名：操作已经安装的软件包时，使用包名。是默认在搜索/var/lib/rpm中的数据库

安装升级与卸载
rpm -ivh 包全名 RPM安装
-i 安装（install）
-v 显示详细安装信息（verbose）
-h 显示进度（hash）
--nodeps 不检测依赖性 一般不用，安装时都得显示依赖性

rpm -Uvh 包全名 RPM包升级
-U 升级（upgrade）

rpm -e 包名
-e 卸载（erase）
--nodeps 不检查依赖性

rpm查询

rpm -q 包名 查询是否安装
-q 查询（query）
rpm -qa 查询所有安装的包
-a 所有（all）
rpm -qa | grep [关键字]
查询所有含有关键字的包，| 为管道符 。作用是管道符左边命令的输出就会作为管道符右边命令的输入
注意：
1、管道命令只处理前一个命令正确输出，不处理错误输出。
2、管道命令右边命令，必须能够接收标准输入流命令才行。

rpm -qi 包名 查询安装过软件包详细信息
-i 查询软件信息（information）
-p 查询未安装包信息（package）
rpm -qip 包全名 查询没安装过软件包详细信息 因为包没有安装所以得加包全名，
因为包在生产好的时候他的信息就已经生成，所以可以查到没安装好的包的信息


rpm -ql 包名 查询包中文件安装位置（不推荐更改默认安装位置）
-l 列表（list）
-p 查询未安装包信息（package）

rpm -qf 系统文件名 查询系统文件属于哪个RPM包
-f 查询系统文件属于哪个软件包（file）

rpm -qR 包名 查询软件包的依赖性
-R 查询软件包的依赖性（requires）
-p 查询未安装包信息（package）

校验和文件提取
rpm -V 已安装的包名 RPM包校验
-V 校验指定RPM包中的文件（verify）
用来判断系统文件是否被更改

例子：rpm -V httpd 显示：
S.5……T. c /etc/httpd/conf/heepd.conf
验证内容中的8个信息的具体内容：（.代表没有改变）
S：文件大小是否改变
M：文件的类型或文件的权限(rwx)是否被改变
5：文件MD5校验和是否改变(可以看成文件内容是否改变) MD5是进行文件完整性验证的
D：设备的中，从代码是否改变
L：文件路径是否改变
U：文件的属主(所有者)是否改变
G：文件的属组是否改变
T：文件的修改时间是否改变
文件类型：
c：配置文件（config file）
d：普通文档（documentation）
g：“鬼”文件（ghost file），很少见，就是该文件不应该被这个RPM包包含
l：授权文件（license file）
r：描述文件（read me）


文件提取（2=to）rpm->cpio
cpio 选项 [文件|设备]（从指定文件或设备中提取文件）
-i：copy-in模式，还原。从文件中提取数据
-d: 还原时自动新建目录
-v：显示还原过程
从rpm包中提取指定文件
rpm2cpio 包全名 | cpio -idv.文件绝对路径
.表示当前目录

rpm2cpio 将rpm包转换为cpio格式的命令
cpio 是一个标准工具，他用于创建软件档案文件和从档案文件中提取文件
（可用来修复误操作）


yum在线管理rpm包

IP地址配置
红帽使用setup 命令配置IP，子网掩码，网关，DNS（前两者可访问局域网，四者具备才能访问互联网）
然后service network restart 重启网络服务
网卡配置文件
vi/etc/sysconfig/network-scripts/ifcfg-eth0


网络yum源
vi /etc/yum.repos.d/CentOS-Base.repo
其中：

CentOS-Base.repo为网络yum源
CentOS-Media.repo为本地磁盘yum源
进入yum内部配置文件中可以看到以下内容：

[base]：容器名称，一定要放在[]中
name：容器说明，可以自己随便写
mirrorlist：镜像站点，这个可以注释掉
baseurl：我们的yum源服务器的地址。默认是CentOS的官方的yum源服务器，是可以使用的，
如果觉得慢可以改成你喜欢的yum镜像源地址
enabled：此容器是否生效
如果不写或者写成enable=1都是生效的，写成enable=0就是不生效
gpgcheck：如果1是指RPM的数字证书生效，如果是0则不生效
gpgkey：数字证书的公钥文件保存位置。不用修改

yum命令
yum list 查询所有可用软件包列表

yum search [关键字(包名)] 搜索服务器上所有和关键字相关的包

yum -y install [包名] 安装软件包
install 安装
-y 自动回答yes

yum -y update [包名] 升级软件包
update 升级
-y 自动回答yes
注意：yum -y update 后必须加包名，否则就是全盘更新，包括Linux内核也会更新，
Linux内核在更新完成之后需要在本地进行配置，内核才可以启动，如果你是在服务器上跑这条命令，
服务器直接崩溃，永远无法连接，再也不能启动！！！

yum -y remove 包名 卸载包
remove 卸载
-y 自动回答yes
注意：yum -y remove卸载会把包所有的依赖包都会卸载，有时候会把系统文件也同时卸载，
小心使用，尽量不要多用！！！


yum软件组管理命令

yum grouplist 列出所有可用的软件组列表
yum groupinstall “软件组名” 安装指定软件组，组名可以由grouplist查询出来，
如果组名之间有空格，用双引号扩起来
yum groupmove 软件组名 卸载指定软件组


光盘yum源搭建步骤：

第一步：挂载光盘
mount /dev/sr0 /mnt/cdrom
第二步：让网络yum源失效
把/etc/yum.repos.d/文件里除了CentOS-Media.repo文件的其他文件全部改名，
把repo后缀改了，随便改一个，比如.bak
还可以让每个文件里面的enabled=0
第三步：修改光盘yum源文件
vim CentOS-Media.repo
[容器] 改为c6-media 叫什么都可以
name=CentOS-$releaserver - Media 名称叫什么都可以
baseurl=file:///mnt/cdrom 地址为自己的光盘挂载地址 file:// 为固定格式不能省略 /mnt/cdrom为光盘挂载地址
把下面两个多余地址用#注释了
然后把enabled=0改为enabled=1 让源配置文件生效
注意：千万不要随意改配置文件格式，加注释，加空格缩紧 都会造成命令错误！！！！！








































